h1. Tests

To run tests locally :

# Install required packages with bundle:
<code>
bundle install --without production development travis
</code>
# Run Ruby tests :
<code>
DATABASE_URL="sqlite::memory:" bundle exec rspec spec
</code>
# Run Javascript tests :
<code>
rake jasmine:ci
</code>
# To run Javascript tests in a browser :
<code>
rake jasmine
</code>

h1. Javascript libraries management

This procedure is not required to use CapoRSS. It is only necessary if you want to manage or update the Javascript dependencies of CapoRSS.
To update Javascript libraries :

# Install Node and npm
# Install Grunt and Bower :
<code>
sudo npm install -g grunt-cli
sudo npm install -g bower
npm install
</code>
# Install Javascript dependencies with Bower :
<code>
bower install
</code>
# Concatenate and minify dependencies using grunt :
<code>
grunt
</code>
# Updating npm dependencies
<code>
sudo npm install -g npm-check-updates
npm-check-updates
npm install
</code>
# Updating bower dependencies
<code>
bower update
grunt
</code>

h1. Application structure

* *app* : Contains the server-side Sinatra application. Each folder has an "init.rb" file which imports the other files.
** *helpers* : Helper methods.
** *models* : Datamapper models. Also includes database migrations in the "migrations.rb" file.
** *parsers* : Custom Feedjira parsers.
** *routes* : Sinatra routes.
** *patches* : Fixes on existing libraries.
* *backbone* : Contains the client-side Backbone application. All of these files are concatenated and minified by the server.
* *doc* : Documentation.
* *i18n* : Translation files.
* *public* : Public files. CSS, fonts, images and Javascript dependencies.
* *scripts* : Worker or cron scripts.
* *spec* : Tests.
* *views* : Template files.
** *partials* : HAML partial files.
** *scss* : SCSS style files.
** *underscore* : HAML files containing Underscore templates.
